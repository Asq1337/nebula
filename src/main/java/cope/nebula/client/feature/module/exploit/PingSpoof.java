package cope.nebula.client.feature.module.exploit;

import cope.nebula.client.events.PacketEvent;
import cope.nebula.client.events.PacketEvent.Direction;
import cope.nebula.client.feature.module.Module;
import cope.nebula.client.feature.module.ModuleCategory;
import cope.nebula.client.value.Value;
import cope.nebula.util.internal.timing.Stopwatch;
import cope.nebula.util.internal.timing.TimeFormat;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketConfirmTransaction;
import net.minecraft.network.play.client.CPacketKeepAlive;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;

public class PingSpoof extends Module {
    public PingSpoof() {
        super("PingSpoof", ModuleCategory.EXPLOIT, "Spoofs your latency to the server");
    }

    public static final Value<Double> delay = new Value<>("Delay", 5.0, 0.1, 10.0);
    public static final Value<Boolean> transactions = new Value<>("Transactions", true);

    private final Queue<Packet<?>> packets = new ConcurrentLinkedQueue<>();
    private final Stopwatch stopwatch = new Stopwatch();
    private boolean sending = false;

    @Override
    protected void onDeactivated() {
        sendAllPackets();
    }

    @Override
    public void onTick() {
        if (stopwatch.hasElapsed((long) (delay.getValue() * 1000.0), true, TimeFormat.MILLISECONDS)) {
            sendAllPackets();
        }
    }

    @SubscribeEvent
    public void onPacket(PacketEvent event) {
        if (event.getDirection().equals(Direction.OUTGOING) && !sending) {
            if (event.getPacket() instanceof CPacketKeepAlive || (transactions.getValue() && event.getPacket() instanceof CPacketConfirmTransaction)) {
                packets.add(event.getPacket());
                event.setCanceled(true);
            }
        }
    }

    private void sendAllPackets() {
        sending = true;

        while (!packets.isEmpty()) {
            Packet<?> packet = packets.poll();
            if (packet == null) {
                break;
            }

            mc.player.connection.sendPacket(packet);
        }

        sending = false;
    }
}
